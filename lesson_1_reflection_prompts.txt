How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It helped in checking he changes that were made in the two versions

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Keep track of what changes were made to the code, and how they were made

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    When manually choosing to create a commit, you can decide for yourself when a logical change made is just right for creating a commit. However, manually creating a commit can lead to too small or too big commits if not created at just the right time

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    In order to track changes made to connected files in a repository as a change made to one file can also affect some other file

How can you use the commands git log and git diff to view the history of files?

    git log will show the entire commit history of a repository and git diff can be used to compare the changes made between two commits

How might using version control make you more confident to make changes that
could break something?

    Since we can use git checkout to test previous versions of a commit where the bug was introduced and find the differences between that and the newer version, it'll be easier to find and fix a bug that could break something

Now that you have your workspace set up, what do you want to try using Git for?

    Trying to clone different repositories and finding the different changes made in commits just to explore more
